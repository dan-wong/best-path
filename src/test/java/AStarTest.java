import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class AStarTest {
	private long _startTime;

	public AStarTest() {}

	@Before
	public void before() {
		_startTime = System.nanoTime();
	}

	@After
	public void after() {
		System.out.print((System.nanoTime() - _startTime)/1000000 + "ms\n");
	}

	//0ms
	@Test
	public void testAStar_BestGreedyPathFunction() {
		System.out.print("testAStar_BestGreedyPathFunction() - ");
		int[][] rawGraph = {
				{3, 6, 3, 7, 2, 5},
				{1, 4, 2, 4, 1, 4},
				{7, 9, 5, 6, 9, 2},
				{10, 8, 4, 3, 10, 5}};

		BestPath bestPath = new BestPath(rawGraph);
		assertEquals(7.0, bestPath.getBestWeight(), 0);
	}

	//80ms
	@Test
	public void testAStar_withRandomGraph30() {
		System.out.print("testAStar_withRandomGraph30() - ");
		int[][] rawGraph = generateGraph(30, 30, 30);

		BestPath bestPath = new BestPath(rawGraph);
		bestPath.getBestPath();
	}

	//70ms
	@Test
	public void testAStar_withRandomGraph50() {
		System.out.print("testAStar_withRandomGraph50() - ");
		int[][] rawGraph = generateGraph(50, 50, 50);

		BestPath bestPath = new BestPath(rawGraph);
		bestPath.getBestPath();
	}

	@Test
	public void testAStar_size50() {
		System.out.print("testAStar_size50() - ");
		int[][] rawGraph = {{6,2,23,9,34,15,28,23,31,43,3,29,36,45,13,27,16,45,33,49,34,22,38,21,31,42,35,3,47,23,13,11,24,38,32,20,2,15,20,49,24,32,50,7,46,1,30,46,12,20},
				{46,28,3,19,20,43,17,1,2,26,8,14,9,30,26,43,18,40,48,9,30,31,44,50,40,10,19,19,38,41,9,21,2,25,46,40,2,47,41,5,13,45,11,5,50,44,41,34,46,29},
				{2,4,32,12,45,45,15,17,10,33,14,30,34,9,44,21,2,47,33,16,13,10,19,14,34,7,35,13,2,45,20,25,50,18,37,13,20,31,46,23,2,32,28,18,25,14,31,16,29,21},
				{34,21,22,33,26,10,33,40,4,14,33,14,50,10,27,46,34,38,1,17,50,48,18,13,43,49,50,45,23,19,28,8,24,7,19,11,49,26,27,17,15,24,42,34,9,40,21,20,41,1},
				{17,49,28,6,38,38,39,20,33,31,32,15,27,15,48,3,9,24,25,14,1,31,49,17,29,13,23,32,39,1,18,12,24,11,13,31,29,10,39,10,45,5,31,34,32,26,24,39,4,26},
				{43,6,18,14,18,22,9,2,12,24,35,16,42,27,37,40,23,30,43,5,48,14,4,17,36,34,32,27,1,22,47,43,34,33,44,48,38,42,45,27,41,33,5,20,1,6,30,5,40,32},
				{24,20,15,3,41,46,36,1,25,47,28,33,36,33,26,14,41,49,15,40,43,42,49,40,33,14,39,38,49,43,39,11,21,37,42,30,27,35,44,7,3,3,37,31,20,5,4,10,9,8},
				{44,30,11,40,19,27,15,25,24,29,35,18,38,14,30,43,19,11,12,34,16,32,48,22,39,18,2,4,44,31,7,41,22,42,31,27,29,31,34,8,24,49,10,30,5,11,30,15,14,16},
				{29,2,17,1,41,9,31,21,10,6,1,17,25,12,14,34,39,9,7,12,3,43,46,42,27,48,30,44,42,21,29,17,7,30,14,26,39,42,16,33,27,30,9,20,23,6,48,32,25,44},
				{46,27,17,15,36,2,32,45,12,3,1,25,14,3,48,19,24,22,4,17,36,20,30,6,3,10,30,25,6,22,41,50,39,27,19,39,42,10,36,4,2,50,36,18,49,8,19,23,25,24},
				{7,16,18,38,49,10,42,32,9,41,39,10,18,31,20,4,30,7,44,27,4,32,14,23,13,44,37,3,1,6,35,24,30,33,29,10,33,12,49,37,34,10,38,40,3,14,22,11,43,47},
				{42,12,4,36,46,30,46,6,4,41,7,10,45,19,49,9,48,23,32,31,20,15,24,8,21,31,5,1,46,40,21,41,4,43,16,18,15,31,12,20,23,26,5,33,21,18,7,37,1,28},
				{39,11,31,47,46,12,33,17,3,26,38,12,15,7,34,1,8,22,6,9,34,43,36,41,14,29,16,16,23,23,2,13,44,2,24,19,30,15,2,12,15,34,39,28,48,46,45,23,22,50},
				{25,19,27,6,1,33,48,5,44,27,43,11,12,27,4,5,40,46,40,36,16,23,33,15,36,40,48,44,3,8,24,45,26,45,5,12,45,18,39,47,20,33,18,27,10,28,22,35,28,9},
				{18,1,8,39,20,4,30,27,8,50,22,47,16,23,43,17,47,45,33,43,8,43,7,43,36,22,26,34,39,38,9,6,28,36,5,26,17,46,24,32,50,1,31,3,6,33,40,42,33,46},
				{43,17,8,34,27,16,22,43,34,41,42,29,1,17,25,17,37,30,14,16,8,23,3,21,4,12,49,16,15,1,36,47,13,44,25,16,43,41,46,5,13,5,30,36,13,24,28,43,11,2},
				{34,7,22,3,45,25,40,49,47,36,25,3,29,19,41,32,42,6,38,42,46,30,13,33,45,6,47,4,6,9,48,33,28,32,18,39,9,41,25,41,5,21,19,3,5,30,7,50,19,27},
				{18,30,12,49,42,36,12,33,13,26,34,2,29,44,35,35,50,6,45,44,37,14,8,13,37,38,10,22,48,10,29,49,29,30,39,13,8,3,50,37,5,15,2,2,10,46,2,13,7,39},
				{1,47,27,36,11,32,16,16,35,45,3,5,13,44,22,14,27,23,27,21,35,10,47,29,41,50,39,13,17,5,28,44,16,8,9,28,32,10,13,26,24,2,17,10,44,6,50,47,14,17},
				{46,26,31,29,40,41,14,29,47,13,6,44,16,36,19,6,7,41,18,22,42,4,43,13,5,47,2,31,13,50,4,18,21,5,36,23,31,46,10,3,44,3,41,11,21,22,1,14,21,38},
				{17,47,16,17,13,38,37,12,18,9,20,17,16,2,18,12,32,10,40,21,18,22,30,40,10,21,30,5,40,3,7,47,16,27,9,8,4,8,26,12,22,34,15,4,47,21,14,49,10,39},
				{1,47,41,38,21,47,3,48,29,6,43,43,9,18,37,50,26,47,40,29,33,21,11,15,17,25,41,43,22,8,41,5,13,3,41,35,28,50,4,33,17,34,49,24,17,1,4,33,41,5},
				{21,38,35,42,23,12,15,11,26,4,23,30,29,16,8,12,40,22,14,21,4,42,40,33,49,41,26,27,10,32,40,36,5,27,6,31,30,31,31,32,9,16,10,14,7,27,29,4,29,34},
				{47,40,17,44,31,35,8,36,15,13,11,3,30,17,50,29,6,42,37,22,1,31,39,2,45,6,13,39,18,43,46,1,30,9,20,41,20,20,15,5,36,16,19,29,14,7,20,16,35,26},
				{50,5,4,25,30,27,31,34,14,4,20,13,15,26,31,41,41,27,1,2,27,21,14,14,18,13,21,16,10,7,4,43,50,46,16,9,41,1,45,19,2,49,50,20,45,27,35,2,23,40},
				{11,16,45,11,12,36,35,28,9,35,22,46,14,43,34,4,25,32,29,46,30,38,48,11,20,2,43,43,4,23,46,45,29,20,34,8,7,15,27,35,17,32,14,31,42,2,20,32,49,29},
				{7,17,6,6,21,31,27,9,42,46,47,14,3,15,25,15,22,1,29,46,33,6,40,8,2,18,4,27,6,50,30,23,16,43,39,17,19,11,12,34,37,25,13,5,6,35,34,19,46,9},
				{12,13,31,18,16,15,33,27,16,16,1,21,29,27,9,29,23,3,8,41,19,20,34,26,33,35,35,11,37,12,26,13,10,21,16,6,16,37,17,17,27,40,15,48,42,23,1,17,26,45},
				{32,27,28,18,18,5,32,13,15,44,1,35,38,48,19,49,34,24,11,36,19,20,7,27,10,30,23,44,29,14,48,7,28,42,40,15,26,44,4,39,49,19,38,11,8,15,22,9,32,26},
				{37,9,17,40,8,19,14,26,22,19,22,30,38,30,6,32,36,20,32,35,46,36,10,3,21,18,15,46,34,19,22,5,35,3,23,14,23,31,49,39,32,36,36,28,33,32,45,38,38,15},
				{4,16,10,44,5,10,20,33,7,38,20,39,49,47,42,1,12,34,24,32,21,10,7,13,7,40,47,29,44,31,42,18,12,28,7,34,40,21,40,35,30,1,22,25,35,44,4,11,18,31},
				{46,33,23,19,32,32,3,40,32,14,44,5,50,9,6,30,37,19,8,22,30,23,21,10,44,31,20,20,49,30,42,27,47,38,48,11,12,38,3,34,46,50,5,40,33,14,3,31,21,48},
				{35,8,3,37,8,27,8,41,33,29,16,5,17,39,25,10,15,19,23,43,27,12,39,25,50,22,38,11,40,30,50,41,33,37,11,9,30,34,14,50,7,46,7,19,48,9,42,45,14,11},
				{22,7,39,11,43,16,21,24,22,37,32,18,46,6,29,14,48,7,12,28,17,15,21,42,43,35,46,35,25,15,2,44,24,15,1,37,37,25,48,7,39,18,5,49,38,3,42,18,48,9},
				{12,27,21,16,48,8,37,49,44,20,10,15,21,37,37,29,1,12,8,16,24,25,44,3,27,15,42,31,31,9,6,24,17,40,22,29,16,42,27,15,11,31,19,34,26,43,17,44,33,17},
				{42,23,4,49,9,17,13,40,14,23,4,38,12,38,17,50,30,13,32,7,26,19,36,25,32,24,21,2,21,11,49,9,15,16,7,49,50,23,37,35,8,50,40,19,41,17,27,7,39,7},
				{19,43,26,31,21,33,35,47,16,38,43,25,16,47,1,33,35,41,19,45,8,12,3,49,18,17,10,20,35,39,20,44,16,43,26,4,39,5,19,20,37,34,42,18,40,31,42,20,3,45},
				{4,10,6,13,34,49,20,2,47,28,49,17,20,22,36,49,10,49,5,26,1,34,7,9,48,20,50,50,33,36,30,10,49,45,35,7,43,21,33,4,24,39,17,40,29,41,44,48,48,12},
				{4,33,2,29,34,11,20,31,47,1,13,21,49,42,28,39,37,37,42,33,22,40,45,15,8,32,3,2,43,40,3,21,39,6,40,33,11,25,26,7,13,8,28,29,19,5,37,23,13,41},
				{30,25,15,5,10,2,47,43,4,20,22,18,6,42,34,12,32,15,37,39,25,5,31,17,45,15,11,27,46,2,17,30,35,35,47,14,27,9,25,26,3,44,16,2,35,46,7,15,15,48},
				{37,28,18,43,26,43,41,44,45,24,17,9,3,29,9,3,20,22,45,46,9,12,41,45,33,47,16,43,2,4,22,37,7,42,15,23,7,36,42,6,50,32,30,17,38,34,40,22,23,42},
				{50,29,29,12,8,15,41,7,29,24,30,21,26,7,11,17,4,18,29,5,36,47,31,3,23,12,30,24,24,11,15,34,17,44,10,19,33,28,13,10,34,19,29,15,43,6,3,39,40,12},
				{18,8,40,12,47,14,47,35,14,43,3,1,22,7,34,30,34,29,29,13,43,1,2,16,31,49,3,19,47,27,48,18,1,50,34,49,6,42,28,28,2,43,10,25,47,27,26,14,50,27},
				{14,42,16,44,11,41,47,27,22,43,10,28,31,43,7,2,5,27,19,40,1,50,1,36,35,31,34,45,6,20,5,24,36,25,49,36,9,2,7,22,2,32,15,17,48,28,25,23,5,15},
				{19,43,43,49,32,9,42,49,12,31,25,28,39,23,8,26,37,34,31,50,21,32,32,40,5,22,49,41,31,49,24,26,41,19,31,5,23,7,9,27,32,24,44,11,31,31,14,33,15,48},
				{37,40,48,34,3,42,17,48,26,41,16,45,18,21,14,42,8,22,7,24,25,25,29,48,16,17,22,49,19,46,32,41,7,20,24,13,42,10,28,27,26,45,38,18,6,25,17,32,7,49},
				{36,3,2,22,44,30,26,30,42,11,50,25,39,46,2,19,10,40,1,50,1,18,26,18,33,42,30,9,48,41,44,2,6,9,46,39,7,41,49,31,49,40,29,50,37,41,31,10,50,27},
				{11,5,3,30,17,15,33,50,22,34,1,20,21,49,49,2,44,20,29,45,21,28,35,26,32,48,39,41,43,23,34,33,3,20,33,46,9,43,6,29,37,1,12,37,41,15,27,33,12,29},
				{16,11,13,46,41,49,44,26,42,1,15,28,39,40,33,16,9,26,38,36,50,40,2,22,14,13,37,42,50,47,8,7,37,35,36,32,38,30,44,21,18,30,19,32,15,33,27,35,21,3},
				{47,34,5,41,18,49,2,14,9,14,1,49,2,44,8,32,34,22,14,36,38,11,7,19,37,33,47,7,32,34,47,6,17,32,23,25,33,18,16,15,33,46,20,33,13,9,38,30,12,12}};

		BestPath bestPath = new BestPath(rawGraph);
		assertEquals(233.0, bestPath.getBestWeight(), 0);
	}

	//665ms
	@Test
	public void testAStar_withRandomGraph100() {
		System.out.print("testAStar_withRandomGraph100() - ");
		int[][] rawGraph = generateGraph(100, 100, 100);

		BestPath bestPath = new BestPath(rawGraph);
		bestPath.getBestPath();
	}

	//16.0
	public void testWeightAStar() {
		System.out.println("testWeightAStar()");
		int[][] rawGraph = generateGraph(50, 50, 50);

		for (double i=1; i<20; i+=0.5) {
			long startTime = System.nanoTime();
			BestPath bestPath = new BestPath(rawGraph);
			bestPath.setAStarWeight(i);
			bestPath.getBestPath();
			System.out.println("Weight: " + i + " - " + (System.nanoTime() - startTime)/1000000 + "ms");
		}
	}

	public void printGraph() {
		int[][] graph = generateGraph(50,50,50);

		StringBuilder sb = new StringBuilder();
		sb.append("{");
		for (int[] aGraph : graph) {
			sb.append("{");
			for (int j = 0; j < graph[0].length; j++) {
				sb.append(aGraph[j]);

				if (j != graph[0].length -1) {
					sb.append(",");
				}
			}
			sb.append("},\n");
		}
		sb.append("}");

		System.out.println(sb.toString());
	}

	private int[][] generateGraph(int width, int length, int maxValue) {
		int[][] graph = new int[width][length];

		for (int i=0; i<width; i++) {
			for (int j=0; j<length; j++) {
				graph[i][j] = (int) (Math.random() * maxValue) + 1;
			}
		}

		return graph;
	}
}